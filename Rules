# encoding: UTF-8
include Nanoc::Helpers::XMLSitemap

### COMPILATION RULES

# 1. Assets – copy these files verbatim (no filtering or layout).
compile %r{^/(favicon(\.ico)?|robots(\.txt)?|sitemap(\.xml)?|keybase(\.txt)?|stylesheets/.*|javascript/.*|plugins/.*|fonts/.*|images/.*|photos/.*|manifest(\.json)?|browserconfig(\.xml)?)$} do
  # No filtering; assets are copied as-is.
end

# 2. Homepage – compile /index.html with ERB and use the default layout.
compile '/index.html' do
  filter :erb
  layout '/default.html'
  write '/index.html'
end

# 3. Sets pages – compile files under /sets/ with ERB and use the "set" layout.
compile %r{^/sets/.*\.html$} do
  filter :erb
  layout '/set.html'
  write @item.identifier.without_ext + '.html'
end

# 4. Other HTML files – compile as ERB and wrap with the default layout.
compile %r{^/.*\.html$} do
  filter :erb
  write @item.identifier.without_ext + '/index.html'
end

# 5. Markdown files – process with RDiscount and wrap with the default layout.
compile %r{^/.*\.md$} do
  filter :rdiscount
  layout '/default.html'
  write @item.identifier.without_ext + '/index.html'
end

### ROUTING RULES

# For assets, simply use the identifier as the output path.
route %r{^/(favicon(\.ico)?|robots(\.txt)?|sitemap(\.xml)?|keybase(\.txt)?|stylesheets/.*|javascript/.*|plugins/.*|fonts/.*|images/.*|photos/.*|manifest(\.json)?|browserconfig(\.xml)?)$} do
  item.identifier.to_s
end

# For all other items, also use the identifier as the output path.
route '*' do
  item.identifier.to_s
end

### LAYOUT RULES

# Process every layout file in the layouts/ folder as ERB.
layout '/*', :erb